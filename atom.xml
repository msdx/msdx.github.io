<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>疯狂的键盘</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://githang.com/"/>
  <updated>2018-01-12T08:08:55.844Z</updated>
  <id>http://githang.com/</id>
  
  <author>
    <name>浩码农</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>一个动态权限库的设计</title>
    <link href="http://githang.com/2018/01/09/The-Design-of-HeyPermission/"/>
    <id>http://githang.com/2018/01/09/The-Design-of-HeyPermission/</id>
    <published>2018-01-09T13:41:37.000Z</published>
    <updated>2018-01-12T08:08:55.844Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;在经过上一次尝试剖析源码后，我意识到自己并没有一种比较好的方式去讲解代码，从而无法把自己所知道的知识更好地输出。所以接下来，至少在源码讲解有新想法前，我都不会再去尝试，也尽量减少博客中的非核心代码，而以思路及想法为主。另外，我也将尝试改进技术博客的笔法，段落之间尽量连贯，整体内容尽量有节奏感，目标是做到深入浅出地表达出主题相关内容。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;从 Android 6.0（API 23）开始，用户可以在应用运行时向其授予权限（6.0 以下，国内厂商也多数做了类似的权限管理），而不是在应用安装时授予。这一方法既可以简化应用的安装过程，也可以让用户对应用的功能进行更多的限制。&lt;/p&gt;
&lt;p&gt;在 Android 系统中，系统权限分为两类：正常权限以及危险权限。其中正常权限是不会直接给用户隐私权带来风险的，如果应用在其清单中声明了该权限，则系统会自动授予该权限。而危险权限，从 6.0 开始，而需要应用动态申请，并且由用户授予。&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://githang.com/categories/Android/"/>
    
    
      <category term="Android" scheme="http://githang.com/tags/Android/"/>
    
      <category term="runtime-permission" scheme="http://githang.com/tags/runtime-permission/"/>
    
  </entry>
  
  <entry>
    <title>2017 年总结</title>
    <link href="http://githang.com/2018/01/05/Summary-of-2017/"/>
    <id>http://githang.com/2018/01/05/Summary-of-2017/</id>
    <published>2018-01-05T03:52:25.000Z</published>
    <updated>2018-01-11T07:59:24.929Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;虽是迟了几天，但总归是有了总结了。回顾过去一年，分几个方面概括一下。&lt;/p&gt;
&lt;h1 id=&quot;个人&quot;&gt;&lt;a href=&quot;#个人&quot; class=&quot;headerlink&quot; title=&quot;个人&quot;&gt;&lt;/a&gt;个人&lt;/h1&gt;&lt;h2 id=&quot;开源&quot;&gt;&lt;a href=&quot;#开源&quot; class=&quot;headerlink&quot; title=&quot;开源&quot;&gt;&lt;/a&gt;开源&lt;/h2&gt;&lt;h3 id=&quot;以前的开源项目&quot;&gt;&lt;a href=&quot;#以前的开源项目&quot; class=&quot;headerlink&quot; title=&quot;以前的开源项目&quot;&gt;&lt;/a&gt;以前的开源项目&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/msdx/status-bar-compat&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;status-bar-compat&lt;/code&gt;&lt;/a&gt; 在过去几个月的 star 量有些增幅，目前已过 400，算是我那些小打小闹的开源项目中 star 量最多的一个。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/msdx/fir-publisher&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;fir-publisher&lt;/code&gt;&lt;/a&gt; 发布到 fir 的一个 Gradle 插件，简单，轻量，新增了对 Android Gradle 3.0 的支持，目前仍是仅公司内部使用的状态。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="杂文" scheme="http://githang.com/categories/%E6%9D%82%E6%96%87/"/>
    
    
  </entry>
  
  <entry>
    <title>跳一跳——电脑能做的事就不要人工来做啦</title>
    <link href="http://githang.com/2017/12/30/Auto-Jump/"/>
    <id>http://githang.com/2017/12/30/Auto-Jump/</id>
    <published>2017-12-30T12:56:22.000Z</published>
    <updated>2018-01-05T03:43:51.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;几年前参考网上的文章写过天天连萌自动玩的项目（之前写在 iteye 的博客上：&lt;a href=&quot;http://maosidiaoxian.iteye.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://maosidiaoxian.iteye.com&lt;/a&gt;，github 项目地址为：&lt;a href=&quot;https://github.com/GameTerminator/lianmeng&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/GameTerminator/lianmeng&lt;/a&gt;），这次微信小游戏里的跳一跳玩了玩，就自然而然地想到用同样的方式来做。&lt;/p&gt;
&lt;p&gt;经过几次修正和简化，最终思路和实现如下：&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://githang.com/categories/Android/"/>
    
    
      <category term="Android" scheme="http://githang.com/tags/Android/"/>
    
      <category term="monkey" scheme="http://githang.com/tags/monkey/"/>
    
  </entry>
  
  <entry>
    <title>人贱不如纸</title>
    <link href="http://githang.com/2017/12/26/Life-is-Cheaper-Than-Paper/"/>
    <id>http://githang.com/2017/12/26/Life-is-Cheaper-Than-Paper/</id>
    <published>2017-12-26T14:28:04.000Z</published>
    <updated>2017-12-26T15:10:31.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;一个技术人扎堆的不谈技术的微信群里，有人发了个跳楼的视频。一个平日活跃的人，在评论中叫好。&lt;br&gt;一段短短的视频，一个没有任何犹豫跳下来的人。&lt;br&gt;几句喝彩的话。&lt;br&gt;有人惋惜，但没有其他人质疑。&lt;br&gt;我无法理解那个喝彩的人的心态，正如无从理解跳楼者的动机。&lt;br&gt;喝彩叫好的人认为，“这样跳楼挺好的”，“不要秀，直接做”，“不要扰乱社会秩序，不要捕捉眼球，要死赶紧”。虽是事后评论，又哪里不胜过于当场欢呼。&lt;br&gt;就因为看到直接跳下，就因为没有看到“秀”，就觉得好，那么，还未淡出程序员视野的中兴员工跳楼事件里，那个在这里喝彩的人如果没有喝彩，可是看到了“秀”？如果没有看到“秀”，是否也一样为之喝彩？&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://githang.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="杂文" scheme="http://githang.com/tags/%E6%9D%82%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>实现 RecyclerView 上拉加载及自动加载</title>
    <link href="http://githang.com/2017/12/09/Implement-Pull-Up-to-Load-More-with-RecyclerView/"/>
    <id>http://githang.com/2017/12/09/Implement-Pull-Up-to-Load-More-with-RecyclerView/</id>
    <published>2017-12-09T02:06:00.000Z</published>
    <updated>2017-12-09T13:59:21.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;之前在&lt;a href=&quot;http://githang.com/2017/09/24/LoadMoreLayout/&quot;&gt;《一步步打造自己的通用上拉加载布局》&lt;/a&gt;（如果没有看过，建议先看下这一篇）写到如何实现一个通用的上拉加载布局，本文将基于此进行扩展，实现 RecyclerView 的上拉加载及自动加载。&lt;br&gt;
    
    </summary>
    
      <category term="Android" scheme="http://githang.com/categories/Android/"/>
    
    
      <category term="Android" scheme="http://githang.com/tags/Android/"/>
    
      <category term="RecyclerView" scheme="http://githang.com/tags/RecyclerView/"/>
    
      <category term="上拉加载" scheme="http://githang.com/tags/%E4%B8%8A%E6%8B%89%E5%8A%A0%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>Retrofit 显示上传文件进度及 bug 记录</title>
    <link href="http://githang.com/2017/11/25/Retrofit-shows-file-upload-progress-and-bug-record/"/>
    <id>http://githang.com/2017/11/25/Retrofit-shows-file-upload-progress-and-bug-record/</id>
    <published>2017-11-25T10:51:10.000Z</published>
    <updated>2017-11-25T13:01:51.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;因产品需求，需要实现图片上传显示文件进度。我在项目中是使用的 Retrofit 和 RxJava，虽网上不乏相关文章，然而在使用的过程中还是遇到了点坑，记录为文，谨供他人参考。&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://githang.com/categories/Android/"/>
    
    
      <category term="Android" scheme="http://githang.com/tags/Android/"/>
    
      <category term="Retrofit" scheme="http://githang.com/tags/Retrofit/"/>
    
  </entry>
  
  <entry>
    <title>CoordinatorLayout 之深入理解</title>
    <link href="http://githang.com/2017/11/09/CoordinatorLayout-In-depth-understanding/"/>
    <id>http://githang.com/2017/11/09/CoordinatorLayout-In-depth-understanding/</id>
    <published>2017-11-09T14:25:33.000Z</published>
    <updated>2017-11-17T09:19:52.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;上篇在对 CoordinatorLayout 作了一些简单介绍，以了解 CoordinatorLayout 带来的一些特性和常见用途。本篇将对 CoordinatorLayout 的源码进行一些分析，以了解它的相关特性的运行原理，以及 Behavior 的执行过程。&lt;br&gt;
    
    </summary>
    
      <category term="Android" scheme="http://githang.com/categories/Android/"/>
    
    
      <category term="Android" scheme="http://githang.com/tags/Android/"/>
    
      <category term="CoordinatorLayout" scheme="http://githang.com/tags/CoordinatorLayout/"/>
    
  </entry>
  
  <entry>
    <title>CoordinatorLayout之初步认识</title>
    <link href="http://githang.com/2017/11/04/A-preliminary-understanding-of-CoordinatorLayout/"/>
    <id>http://githang.com/2017/11/04/A-preliminary-understanding-of-CoordinatorLayout/</id>
    <published>2017-11-04T05:30:59.000Z</published>
    <updated>2017-11-17T03:45:43.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;CoordinatorLayout是2015 I/O大会发布的一种布局，它可以说是一个非常强大的FrameLayout，主要用于协调(Coordinate)子控件，来帮助实现它们之间的一些交互效果。它适合用于应用的顶层布局，或是View之间交互的一个容器。&lt;/p&gt;
&lt;p&gt;本篇主要是对CoordinatorLayout的相关内容进行一个初步的认识，看看 CoordinatorLayout 都提供了哪些特性来帮助完成View之间的交互。&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://githang.com/categories/Android/"/>
    
    
      <category term="Android" scheme="http://githang.com/tags/Android/"/>
    
      <category term="CoordinatorLayout" scheme="http://githang.com/tags/CoordinatorLayout/"/>
    
  </entry>
  
  <entry>
    <title>梦——少年不生事</title>
    <link href="http://githang.com/2017/10/27/Dream-Juvenile-does-not-make-trouble/"/>
    <id>http://githang.com/2017/10/27/Dream-Juvenile-does-not-make-trouble/</id>
    <published>2017-10-27T14:15:00.000Z</published>
    <updated>2017-11-18T11:39:13.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;昨晚做了一个很有故事的梦，似乎可以写成小说，也可以当作素材。到此刻，多数梦里情景都已忘记，但一些梦中感受仍教人流连。&lt;/p&gt;
    
    </summary>
    
      <category term="拾梦者" scheme="http://githang.com/categories/%E6%8B%BE%E6%A2%A6%E8%80%85/"/>
    
    
      <category term="梦" scheme="http://githang.com/tags/%E6%A2%A6/"/>
    
  </entry>
  
  <entry>
    <title>念</title>
    <link href="http://githang.com/2017/10/08/Miss/"/>
    <id>http://githang.com/2017/10/08/Miss/</id>
    <published>2017-10-08T15:53:00.000Z</published>
    <updated>2017-10-20T04:53:58.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;我心里万般感触，而我口上无话可说。&lt;br&gt;我又一遍从很多年前开始回想，仍在怀疑在那些片段中我是否只是个笑话。&lt;br&gt;如果把现在的时间算作久违的深夜，那么我在知道着自己是在用生命杀时间的时候，还是依然这么做了。&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://githang.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="http://githang.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>开发的没道理</title>
    <link href="http://githang.com/2017/10/03/Development-Unreasonableness/"/>
    <id>http://githang.com/2017/10/03/Development-Unreasonableness/</id>
    <published>2017-10-03T01:32:37.000Z</published>
    <updated>2017-10-03T01:34:42.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;在IT群里，总能看到对IT公司各职位之间的矛盾的调侃。比如产品与设计，设计与开发，产品与开发，开发与测试等等。&lt;br&gt;不同地域，不同公司，矛盾似乎就一直存在，尽管还能愉快或不愉快地协作。即使一些情况下一方或双方能退一步海阔天空，但有时候针对细节而起的争议，以开发的角度来讲，总能让人觉得不可理喻。&lt;br&gt;就比如Android开发人员常遇到的：&lt;br&gt;产品告诉你要怎么做：“像iOS那样。”&lt;br&gt;测试和你提了个Bug：“你这里和iOS的不一样。”&lt;br&gt;或者是面试设计出来的iOS风格的效果图。&lt;/p&gt;
    
    </summary>
    
      <category term="杂文" scheme="http://githang.com/categories/%E6%9D%82%E6%96%87/"/>
    
    
      <category term="杂文" scheme="http://githang.com/tags/%E6%9D%82%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>一步步打造自己的通用上拉加载布局</title>
    <link href="http://githang.com/2017/09/24/LoadMoreLayout/"/>
    <id>http://githang.com/2017/09/24/LoadMoreLayout/</id>
    <published>2017-09-24T11:10:40.000Z</published>
    <updated>2017-09-24T14:28:39.000Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;下拉刷新是App交互中非常常见的场景，而与其对应的上拉加载，在很多场景中也已经是用户意识中理所当然的一种交互了。&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://githang.com/categories/Android/"/>
    
    
      <category term="Android" scheme="http://githang.com/tags/Android/"/>
    
      <category term="上拉加载" scheme="http://githang.com/tags/%E4%B8%8A%E6%8B%89%E5%8A%A0%E8%BD%BD/"/>
    
      <category term="github" scheme="http://githang.com/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>ViewPager与CoordinatorLayout一起使用的一个Bug</title>
    <link href="http://githang.com/2017/09/21/CoordinatorLayout-ViewPager-Bug/"/>
    <id>http://githang.com/2017/09/21/CoordinatorLayout-ViewPager-Bug/</id>
    <published>2017-09-21T05:01:36.000Z</published>
    <updated>2017-10-25T08:33:51.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本文记录一个关于&lt;code&gt;ViewPager&lt;/code&gt;与&lt;code&gt;CoordinatorLayout&lt;/code&gt;一起使用的Bug，目前虽然有解决问题的方法，但是引起这个bug的原因依然没有找到。&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://githang.com/categories/Android/"/>
    
    
      <category term="Android" scheme="http://githang.com/tags/Android/"/>
    
      <category term="CoordinatorLayout" scheme="http://githang.com/tags/CoordinatorLayout/"/>
    
      <category term="Bug" scheme="http://githang.com/tags/Bug/"/>
    
  </entry>
  
  <entry>
    <title>蒙层</title>
    <link href="http://githang.com/2017/09/18/Mask-Layer/"/>
    <id>http://githang.com/2017/09/18/Mask-Layer/</id>
    <published>2017-09-18T13:54:10.000Z</published>
    <updated>2017-09-18T14:04:48.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;讲两个故事吧。&lt;/p&gt;
&lt;p&gt;两年前，我用一部华为千元智能机拍了几张照片发在了朋友圈上。没多久，姐姐在微信上问我朋友圈上的照片是用什么拍的。我说用的系统自带的相机啊。&lt;br&gt;姐姐说，那照片看起来好唯美啊。&lt;br&gt;我点开朋友圈里的图上看了看，是有一种自然的朦胧感觉，像是加了羽化的效果。&lt;br&gt;我翻过手机看了下镜头。平滑的手机后背，只有镜头凸起，即便有着保护壳，镜片的表面也是伤痕累累。我回复说，可能是镜头磨损太严重了吧。&lt;br&gt;后来我在淘宝花了十八块钱买了一对镜片，给手机换上一只。然后试了下拍照，果真是清晰了一些，能看到分明的棱角。而在此之前对着拍出来的模糊照片，我一直以为是软件或像素的问题。&lt;br&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://githang.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="http://githang.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>让okhttp3优雅地打印日志</title>
    <link href="http://githang.com/2017/09/16/OkHttp3-LogInterceptor/"/>
    <id>http://githang.com/2017/09/16/OkHttp3-LogInterceptor/</id>
    <published>2017-09-16T01:51:52.000Z</published>
    <updated>2017-09-16T03:32:26.000Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;现在应该有许多人都是使用okhttp来作为项目的网络请求的底层库，那么，还有人在沿用着对每个请求在执行前后手动打印一下参数及地址这种古老的日志打印方式吗？okhttp的灵活而强大的特点之一，就是其提供了一个拦截器接口，使得我们在打印日志时极为方便，并且对我们的接口代码无入侵性。&lt;br&gt;本篇文章介绍一个okhttp3的日志打印库，无论是使用古老方式来打印日志的，还是使用square官方okhttp3的日志库的，都可以一看。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Android" scheme="http://githang.com/categories/Android/"/>
    
    
      <category term="Android" scheme="http://githang.com/tags/Android/"/>
    
      <category term="github" scheme="http://githang.com/tags/github/"/>
    
      <category term="开源" scheme="http://githang.com/tags/%E5%BC%80%E6%BA%90/"/>
    
      <category term="OkHttp" scheme="http://githang.com/tags/OkHttp/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://githang.com/2017/09/15/hello-world/"/>
    <id>http://githang.com/2017/09/15/hello-world/</id>
    <published>2017-09-15T14:48:26.000Z</published>
    <updated>2017-09-15T14:48:26.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a
        
      
    
    </summary>
    
    
  </entry>
  
</feed>
